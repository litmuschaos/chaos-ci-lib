---
name: Push
on:
  push:
    branches:
      - master
    tags-ignore:
      - '**'

env:
  REPONAME: litmuschaos
  IMAGENAME: chaos-ci-lib
  IMAGETAG: ci

jobs:
  pre-checks:
    runs-on: ubuntu-latest
    steps:
      # Install golang
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14

      # Checkout to the latest commit
      # On specific directory/path
      - name: Checkout
        uses: actions/checkout@v2

      - name: gofmt check
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -ne 0 ]
          then
           echo "The following files were found to be not go formatted:"
           gofmt -s -l .
           exit 1
          fi
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v1

  push:
    runs-on: ubuntu-latest
    steps:

      # Install golang
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DNAME }}
          password: ${{ secrets.DPASS }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          file: build/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REPONAME }}/${{ env.IMAGENAME }}:${{ env.IMAGETAG }}

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/${{ env.REPONAME }}/${{ env.IMAGENAME }}:${{ env.IMAGETAG }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
